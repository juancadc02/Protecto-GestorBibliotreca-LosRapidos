// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(GestorBibliotecaDbContext))]
    partial class GestorBibliotecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoresLibros", b =>
                {
                    b.Property<int>("Autoresid_autor")
                        .HasColumnType("integer");

                    b.Property<int>("Librosid_libro")
                        .HasColumnType("integer");

                    b.HasKey("Autoresid_autor", "Librosid_libro");

                    b.HasIndex("Librosid_libro");

                    b.ToTable("Rel_Autores_Libros", (string)null);
                });

            modelBuilder.Entity("DAL.Modelos.Acceso", b =>
                {
                    b.Property<int>("id_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_acceso"));

                    b.Property<string>("codigo_acceso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descripcion_acceso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_acceso");

                    b.ToTable("Accesos");
                });

            modelBuilder.Entity("DAL.Modelos.Autores", b =>
                {
                    b.Property<int>("id_autor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_autor"));

                    b.Property<string>("apellidos_autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre_autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_autor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("DAL.Modelos.Colecciones", b =>
                {
                    b.Property<int>("id_colecciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_colecciones"));

                    b.Property<string>("nombre_coleccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_colecciones");

                    b.ToTable("Colecciones");
                });

            modelBuilder.Entity("DAL.Modelos.Editoriales", b =>
                {
                    b.Property<int>("id_editoriales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_editoriales"));

                    b.Property<string>("nombre_editorial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_editoriales");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("DAL.Modelos.Estamos_Prestamo", b =>
                {
                    b.Property<int>("id_estado_prestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_estado_prestamo"));

                    b.Property<int>("codigo_estado_prestamo")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion_estado_prestamo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_estado_prestamo");

                    b.ToTable("estamos_Prestamos");
                });

            modelBuilder.Entity("DAL.Modelos.Generos", b =>
                {
                    b.Property<int>("id_genero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_genero"));

                    b.Property<string>("descripcion_genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre_genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_genero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("DAL.Modelos.Libros", b =>
                {
                    b.Property<int>("id_libro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_libro"));

                    b.Property<string>("edicion_libro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id_coleccion")
                        .HasColumnType("integer");

                    b.Property<int>("id_editorial")
                        .HasColumnType("integer");

                    b.Property<int>("id_genero")
                        .HasColumnType("integer");

                    b.Property<string>("isbn_libro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre_libro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_libro");

                    b.HasIndex("id_coleccion");

                    b.HasIndex("id_editorial");

                    b.HasIndex("id_genero");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("DAL.Modelos.Prestamo", b =>
                {
                    b.Property<int>("id_prestamos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_prestamos"));

                    b.Property<DateTime>("fch_entrega_prestamo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fch_fin_prestamo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fch_inicio_prestamo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_estado_prestamo")
                        .HasColumnType("integer");

                    b.Property<int>("id_libro")
                        .HasColumnType("integer");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.HasKey("id_prestamos");

                    b.HasIndex("id_estado_prestamo");

                    b.HasIndex("id_usuario");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("DAL.Modelos.Usuarios", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellidos_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("clave_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dni_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fch_alta_usuario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("fecha_vencimiento_token")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_acceso")
                        .HasColumnType("integer");

                    b.Property<byte[]>("imagen")
                        .HasColumnType("bytea");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tlf_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("token_recuperacion")
                        .HasColumnType("text");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_acceso");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LibrosPrestamo", b =>
                {
                    b.Property<int>("Prestamosid_prestamos")
                        .HasColumnType("integer");

                    b.Property<int>("collectionLibroid_libro")
                        .HasColumnType("integer");

                    b.HasKey("Prestamosid_prestamos", "collectionLibroid_libro");

                    b.HasIndex("collectionLibroid_libro");

                    b.ToTable("Rel_Libros_Prestamos", (string)null);
                });

            modelBuilder.Entity("AutoresLibros", b =>
                {
                    b.HasOne("DAL.Modelos.Autores", null)
                        .WithMany()
                        .HasForeignKey("Autoresid_autor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.Libros", null)
                        .WithMany()
                        .HasForeignKey("Librosid_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Modelos.Libros", b =>
                {
                    b.HasOne("DAL.Modelos.Colecciones", "Colecciones")
                        .WithMany()
                        .HasForeignKey("id_coleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.Editoriales", "Editoriales")
                        .WithMany("Libros")
                        .HasForeignKey("id_editorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.Generos", "Generos")
                        .WithMany()
                        .HasForeignKey("id_genero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colecciones");

                    b.Navigation("Editoriales");

                    b.Navigation("Generos");
                });

            modelBuilder.Entity("DAL.Modelos.Prestamo", b =>
                {
                    b.HasOne("DAL.Modelos.Estamos_Prestamo", "estado")
                        .WithMany()
                        .HasForeignKey("id_estado_prestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.Usuarios", "usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("DAL.Modelos.Usuarios", b =>
                {
                    b.HasOne("DAL.Modelos.Acceso", "Acceso")
                        .WithMany()
                        .HasForeignKey("id_acceso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acceso");
                });

            modelBuilder.Entity("LibrosPrestamo", b =>
                {
                    b.HasOne("DAL.Modelos.Prestamo", null)
                        .WithMany()
                        .HasForeignKey("Prestamosid_prestamos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.Libros", null)
                        .WithMany()
                        .HasForeignKey("collectionLibroid_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Modelos.Editoriales", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
